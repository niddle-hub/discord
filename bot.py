import discord
import asyncio
import random
import os

client = discord.Client()

@client.event
async def on_connect():
    print('Client connect to discord!')

@client.event
async def on_ready():
    for guild in client.guilds:
        print('Bot ready on <<' + guild.name + '>> server')

@client.event 
async def on_message(message):
    channel = message.channel

    if message.author == client.user:
        return

    if message.content.startswith('!–º–æ–Ω–µ—Ç–∫–∞'):
        place = ["üî¥ –û—Ä—ë–ª","üîµ –†–µ—à–∫–∞"]
        await channel.send(random.choice(place))

    if message.content.startswith('!help'):
        emb = discord.Embed(title = "–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞", colour = 0x9b59b6)
        emb.add_field(name="!help", value="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        emb.add_field(name="!–º–æ–Ω–µ—Ç–∫–∞", value="–ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É")
        await channel.send(embed=emb)

@client.event
async def on_voice_state_update(member,before,after):
    try:
        if after.channel.id == 737973690255409183:
            new_channel = await member.guild.create_voice_channel(member.name, category = member.guild.categories[2])
            await member.move_to(new_channel)
            def check(a,b,c):
                return len(new_channel.members) == 0
            await client.wait_for('voice_state_update', check=check)
            await new_channel.delete()
        elif after.channel.id == 738715723442159677:
            new_channel = await member.guild.create_voice_channel(name = "–ß–∞—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª {0}".format(member.name), category = member.guild.categories[3], user_limit = 2)
            await member.move_to(new_channel)
            def check(a,b,c):
                return len(new_channel.members) == 0
            await client.wait_for('voice_state_update', check=check)
            await new_channel.delete()
        elif after.channel.id == 738715774444896297:
            new_channel = await member.guild.create_voice_channel(name = "–ß–∞—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª {0}".format(member.name), category = member.guild.categories[3], user_limit = 3)
            await member.move_to(new_channel)
            def check(a,b,c):
                return len(new_channel.members) == 0
            await client.wait_for('voice_state_update', check=check)
            await new_channel.delete()
        elif after.channel.id == 738715823887220768:
            new_channel = await member.guild.create_voice_channel(name = "–ß–∞—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª {0}".format(member.name), category = member.guild.categories[3], user_limit = 4)
            await member.move_to(new_channel)
            def check(a,b,c):
                return len(new_channel.members) == 0
            await client.wait_for('voice_state_update', check=check)
            await new_channel.delete()
        elif after.channel.id == 738715851691130931:
            new_channel = await member.guild.create_voice_channel(name = "–ß–∞—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª {0}".format(member.name), category = member.guild.categories[3], user_limit = 5)
            await member.move_to(new_channel)
            def check(a,b,c):
                return len(new_channel.members) == 0
            await client.wait_for('voice_state_update', check=check)
            await new_channel.delete()
        else:
            pass
    except:
        pass

@client.event
async def on_member_join(member):
    for TextChannel in member.guild.text_channels:
        await TextChannel.send("–ö –Ω–∞–º –∑—è–≥–ª—è–Ω—É–ª <@{0}> ...................... –∑–∞–µ–±–∏—Å—å......üëç".format(member.id))

@client.event
async def on_member_remove(member):
    for TextChannel in member.guild.text_channels:
        await TextChannel.send("–ù–∞—Å –ø–æ–∫–∏–¥–∞–µ—Ç <@{0}> ...................... –ø–æ—Ö—É–π......üïØ".format(member.id))

TOKEN = os.environ.get('BOT_TOKEN')
client.run(str(TOKEN))